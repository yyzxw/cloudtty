apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudtty-job-template
  namespace: system
data: 
  job-temp.yaml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      namespace: {{ .Namespace }}
      name: {{ .Name }}
      labels:
        ownership: {{ .Ownership }}
    spec:
      activeDeadlineSeconds: 3600
      ttlSecondsAfterFinished: 60
      parallelism: 1
      completions: 1
      template:
        spec:
          containers:
          - name:  web-tty
            image: ghcr.io/cloudtty/cloudshell:latest
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 7681
              name: tty-ui
              protocol: TCP
            command:
              - bash
              - "-c"
              - |
                once=""
                index=""
                if [ "${ONCE}" == "true" ];then once=" --once "; fi;
                if [ -f /usr/lib/ttyd/index.html ]; then index=" --index /usr/lib/ttyd/index.html ";fi
                if [ -z "${TTL}" ] || [ "${TTL}" == "0" ];then
                    ttyd ${index} ${once} sh -c "${COMMAND}"
                else
                    timeout ${TTL} ttyd ${index} ${once} sh -c "${COMMAND}" || echo "exiting"
                fi
            env:
            - name: KUBECONFIG
              value: /usr/local/kubeconfig/config
            - name: ONCE
              value: "{{ .Once }}"
            - name: TTL
              value: "{{ .Ttl }}"
            - name: COMMAND
              value: {{ .Command }}
            volumeMounts:
              - mountPath: /usr/local/kubeconfig/
                name: kubeconfig
            readinessProbe:
              tcpSocket:
                port: 7681
              periodSeconds: 1
              failureThreshold: 15
            livenessProbe:
              tcpSocket:
                port: 7681
              periodSeconds: 20
          restartPolicy: Never
          volumes:
          - secret:
              defaultMode: 420
              secretName: {{`{{ .Secret }}`}}
            name: kubeconfig
